/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

"use strict";var f=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var D=Object.getOwnPropertyNames;var F=Object.prototype.hasOwnProperty;var B=(n,i,e)=>i in n?f(n,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[i]=e;var L=(n,i)=>{for(var e in i)f(n,e,{get:i[e],enumerable:!0})},O=(n,i,e,t)=>{if(i&&typeof i=="object"||typeof i=="function")for(let o of D(i))!F.call(n,o)&&o!==e&&f(n,o,{get:()=>i[o],enumerable:!(t=M(i,o))||t.enumerable});return n};var _=n=>O(f({},"__esModule",{value:!0}),n);var d=(n,i,e)=>B(n,typeof i!="symbol"?i+"":i,e);var $={};L($,{default:()=>b});module.exports=_($);var c=require("obsidian");var m=require("obsidian"),I={loadImageBlob:5e3,notice:1800};function h(n){let i=["avif","bmp","gif","jpg","jpeg","png","svg","webp","heic"];return n=n.toLowerCase(),i.some(e=>n.endsWith(`.${e}`))}function y(n){return n=new URL(n),n.search="",n.toString()}async function u(n){let i=await A(n);if(!i)return;let e=()=>{new m.Notice(i18next.t("interface.copied_generic"),I.notice)};try{await navigator.clipboard.write([new ClipboardItem({[i.type]:i})]),e();return}catch(t){console.warn("Failed copying image with original mimetype, using PNG fallback - ",t)}try{i=new Blob([i],{type:"image/png"}),await navigator.clipboard.write([new ClipboardItem({[i.type]:i})]),e();return}catch(t){console.warn("Failed copying image with PNG mimetype - ",t)}new m.Notice(i18next.t("Failed to copy image to clipboard"),I.notice)}async function A(n){return n instanceof m.TFile?new Blob([await n.vault.readBinary(n)],{type:`image/${n.extension}`}):await N(n)}function N(n){let i=()=>new Promise((e,t)=>{let o=new Image;o.crossOrigin="anonymous",o.onload=()=>{let a=document.createElement("canvas");a.width=o.width,a.height=o.height,a.getContext("2d").drawImage(o,0,0),a.toBlob(r=>{e(r)})},o.onerror=async()=>{try{await fetch(o.src,{mode:"no-cors"});let a=await N(`https://api.allorigins.win/raw?url=${encodeURIComponent(n)}`);e(a)}catch(a){t(new Error)}},o.src=n});return R(I.loadImageBlob,i())}function R(n,i){let e=new Promise((t,o)=>setTimeout(()=>{o(new Error(`timed out after ${n} ms`))},n));return Promise.race([i,e])}function T(n,i,e,t,o){return n.on(i,e,t,o),()=>{n.off(i,e,t,o)}}function C(n,i){let e=(0,m.normalizePath)(n.vault.adapter.basePath);e=e.replace("file://","");let t=i.pathname;if(t=t.replace("/_capacitor_file_",""),t=t.split("/").filter(o=>o!=="").join("/"),t.startsWith(e)){let o=t.slice(e.length+1),a=decodeURI(o);return n.vault.getFileByPath(a)}return null}function v(n,i){n.workspace.getLeaf(!0).openFile(i,{active:!0})}var k=require("obsidian"),S=["file","open","info","system"],x={"copy-to-clipboard":{section:"info",icon:"image-file",title:"interface.label-copy"},"open-in-new-tab":{section:"open",icon:"file-plus",title:"interface.menu.open-in-new-tab"},"open-in-default-app":{section:"system",icon:"arrow-up-right",title:"plugins.open-with-default-app.action-open-file"},"show-in-explorer":{section:"system",icon:"arrow-up-right",title:`plugins.open-with-default-app.action-show-in-folder${k.Platform.isMacOS?"-mac":""}`},"reveal-in-navigation":{section:"system",icon:"folder",title:"plugins.file-explorer.action-reveal-file"},"reveal-in-navigation-tree":{section:"system",icon:"folder",title:"Reveal in File Tree Alternative"},"rename-file":{section:"info",icon:"pencil",title:"interface.menu.rename"}};function p(n,i){return n.setSection(x[i].section).setIcon(x[i].icon).setTitle(i18next.t(x[i].title))}var g=require("obsidian");var U={middleClickNewTab:!0,revealInNavigation:!0,enableDefaultOnCanvas:!1},w=class extends g.PluginSettingTab{constructor(e,t){super(e,t);d(this,"plugin");this.plugin=t}display(){let{containerEl:e}=this;e.empty(),e.createEl("h3",{text:"Image Context Menus settings"}),new g.Setting(e).setName("Middle mouse click on image link to open in new tab").addToggle(t=>{t.setValue(this.plugin.settings.middleClickNewTab).onChange(o=>{this.plugin.settings.middleClickNewTab=o,this.plugin.saveSettings()})}),new g.Setting(e).setName("Reveal file in navigation menu item").setDesc("You might want to disable this if you use a plugin for replacing default Obsidian file navigation. This plugin supports File Tree Alternative by displaying a reveal menu item for it if installed.").addToggle(t=>{t.setValue(this.plugin.settings.revealInNavigation).onChange(o=>{this.plugin.settings.revealInNavigation=o,this.plugin.saveSettings()})}),new g.Setting(e).setName("Enable regular context menu on canvas").setDesc(`The regular context menu sometimes duplicates the context menu on the canvas, so it's disabled there by default.
There is a separate context menu for images directly on the canvas, but if that's not enough (for example for images in notes on canvas), you can enable the regular context menu here too.`).addToggle(t=>{t.setValue(this.plugin.settings.enableDefaultOnCanvas).onChange(o=>{this.plugin.settings.enableDefaultOnCanvas=o,this.plugin.saveSettings()})})}};var b=class extends c.Plugin{constructor(){super(...arguments);d(this,"canvasCardMenu");d(this,"settings")}async loadSettings(){this.settings=Object.assign({},U,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async onload(){await this.loadSettings(),this.addSettingTab(new w(this.app,this)),this.registerDocument(document),this.app.workspace.on("window-open",(e,t)=>{this.registerDocument(t.document)}),this.registerEvent(this.app.workspace.on("file-menu",(e,t,o)=>{o==="canvas-menu"&&t instanceof c.TFile&&h(`.${t.extension}`)&&(e.addItem(a=>p(a,"open-in-new-tab").onClick(()=>{v(this.app,t)})),e.addItem(a=>p(a,"copy-to-clipboard").onClick(()=>{u(t)})))})),this.registerEvent(this.app.workspace.on("canvas:node-menu",(e,t)=>{let o=t.unknownData;if(o.type==="link"){let a=y(o.url);if(!h(a))return;e.addItem(l=>p(l,"copy-to-clipboard").setSection("canvas").onClick(()=>{u(a)}))}})),this.registerEvent(this.app.workspace.on("url-menu",(e,t)=>{t=y(t),h(t)&&e.addItem(o=>p(o,"copy-to-clipboard").onClick(()=>{u(t)}))}))}registerDocument(e){let t=[T(e,"contextmenu","img",this.onImageContextMenu.bind(this),{capture:!0}),T(e,"mouseup","img",this.onImageMouseUp.bind(this))];this.register(()=>{for(let o of t)o()})}onImageContextMenu(e){var P;if(!this.settings.enableDefaultOnCanvas&&((P=this.app.workspace.getActiveFile())==null?void 0:P.extension)==="canvas")return;e.preventDefault();let t=e.target,o=new URL(t.src);if(!["app:","data:","http:","https:"].includes(o.protocol)){new c.Notice(`No handler for ${o.protocol} protocol`);return}let l=new c.Menu,r=C(this.app,o);l.addSections(Array.from(S)),r&&l.addItem(s=>p(s,"rename-file").onClick(()=>this.app.fileManager.promptForFileRename(r))),l.addItem(s=>p(s,"copy-to-clipboard").onClick(()=>{u(r!=null?r:t.src)})),r&&(c.Platform.isMobile&&l.addItem(s=>s.setTitle(r.name).setSection("file").setIsLabel(!0)),l.addItem(s=>p(s,"open-in-new-tab").onClick(()=>{v(this.app,r)})),c.Platform.isDesktop&&(l.addItem(s=>p(s,"open-in-default-app").onClick(()=>{this.app.openWithDefaultApp(r.path)})),l.addItem(s=>p(s,"show-in-explorer").onClick(()=>{this.app.showInFolder(r.path)}))),this.settings.revealInNavigation&&l.addItem(s=>p(s,"reveal-in-navigation").onClick(()=>{var E;(E=this.app.internalPlugins.getEnabledPluginById("file-explorer"))==null||E.revealInFolder(r)})),this.app.plugins.enabledPlugins.has("file-tree-alternative")&&l.addItem(s=>p(s,"reveal-in-navigation-tree").onClick(()=>{self.dispatchEvent(new CustomEvent("fta-reveal-file",{detail:{file:r}}))}))),l.showAtPosition({x:e.pageX,y:e.pageY})}onImageMouseUp(e){let t=e.target;if(e.button===1&&this.settings.middleClickNewTab){let a=C(this.app,new URL(t.src));if(!a)return;v(this.app,a)}}};

/* nosourcemap */